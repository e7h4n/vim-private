snippet def
	define(function (require, exports) {
		'use strict';

		${1}
	});
snippet req
	var ${1:} = require('${2}/$1');
snippet reqs
	var ${1:} = require('${2}/$1').getInstance();
snippet for for length
	for (var i=0, l=${1:SomeThing}.length; i<l; i++) {
		var ${2:item} = $1[i];${3}
	}
snippet bb
	var Backbone = require('../${1}lib/backbone');
snippet us
	var _ = require('../${1}lib/underscore');
snippet ma
	var Mustache = require('../lib/mustache');
snippet jq
	var $ = require('../${1}lib/jquery');
snippet dbc
	var DbC = require('../util/DbC');
snippet hr
	/* -------------------- ${1} ----------------------- */
snippet el
	/* -------------------- Event Listener ----------------------- */
snippet bo
	/* -------------------- Backbone Options ----------------------- */
snippet lends
	/** @lends ${1}.prototype */
snippet desc
	describe('EditorView', function () {
		${1}
	});
snippet it
	it('${1}', function () {
		var editor = null;
		waitsFor(function () {
			editor = eWindow.editor;
			return editor !== undefined;
		}, 'Editor initialize failed', 10000);
		${2}
	});
snippet runs
	runs(function () {
		${1}
	});
snippet l
	console.log("$1:", ${1:});
snippet l'
	console.log('-- ${1:} ----------------');
snippet dl
	if (DEBUG) {
		console.log('$1', ${1});
	}
snippet tmpldoc
	/**
	 * 模板函数
	 * @function
	 * @param {Object} [templateData]
	 */
snippet /**
	/**
	 * ${1}
	 */
snippet jslint
	/*jslint browser: true, vars: true, nomen: true, indent: 4, plusplus: true, sloppy: true*/
	/*global define: true */
snippet single
	var instance = null;
	return {
		getInstance: function () {
			if (instance === null) {
				instance = new ${1};
			}

			return instance;
		}
	};
snippet evtdoc
	/**
	 * ${1} 事件的回调函数
	 * @event
	 * @private
	 * @param {Event} evt
	 */
snippet tmpl
	/*jslint browser: true, vars: true, nomen: true, indent: 4, plusplus: true, sloppy: true*/

	/*global define: true */

	/**
	 * @author zhangy<zhangyc@fenbi.com>
	 * @version: $Id: $
	 */

	define(function (require, exports) {
		'use strict';

		${1}
	});
snippet vt
	/*jslint browser: true, vars: true, nomen: true, indent: 4, plusplus: true, sloppy: true*/

	/*global define: true */

	/**
	 * @author zhangy<zhangyc@fenbi.com>
	 * @version: $Id: $
	 */

	define(function (require, exports) {
		'use strict';

		var Backbone = require('../../lib/backbone');
		var ${1:} = Backbone.View.extend({
		});

		return $1;
	});
snippet super
	${1}.prototype.${2}.apply(this, arguments);
snippet sc
	${1}.prototype.initialize.apply(this, arguments);
snippet valid
	/*jslint browser: true, vars: true, nomen: true, indent: 4, plusplus: true, sloppy: true*/

	/*global define: true */

	/**
	 * @author zhangy<zhangyc@fenbi.com>
	 * @version: $Id: $
	 */

	define(function (require, exports) {
		'use strict';

		/**
		 * @param {Object} options
		 * @param {Number} options.error
		 */
		return function (options) {
			return function (elem) {
				var FormUtil = require('../../../util/FormUtil');

				var validResult = {};

				var value = FormUtil.getValue(elem);

				${1}

				return validResult;
			};
		};
	});
snippet lu
	var loginUser = require('../${1:../}util/PageData').getLoginUser();
snippet cu
	var currentUser = require('../${1:../}util/PageData').getCurrentUser();
snippet lc
	console.count('${1}');
